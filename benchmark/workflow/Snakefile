# config file given when running snakemake
query_read_len = config["query_read_length"]
ref_seq_len = config["ref_seq_length"]
match_len = config["match_length"]
num_of_qseqs = config["num_of_qseqs"]
num_of_refseqs = config["num_of_refseqs"]
num_of_bins = config["num_of_bins"]


error_rates = [0, 0.025, 0.05, 0.075, 0.1]
bins = list(range(num_of_bins))
bin_ids = [str(x).zfill(2) for x in bins]


rule all:
    input:
        prot = "results/queries_prot.fasta",
        #bins = expand("results/er_{er}/bins/bin_{bin_id}.fasta", bin_id=bin_ids, er=error_rates),
        bin_paths = expand("results/er_{er}/all_bin_paths.txt", er=error_rates),
        #queries = expand("results/er_{er}/final_queries.fasta", er=error_rates),
        #binfile = "results/all_bin_paths.txt"
        #valik_out = expand("results/er_{er}/search.gff", er=error_rates),
        #lambda_db = expand("results/er_{er}/dbs/db_{bin_id}.lba", er=error_rates, bin_id=bin_ids)
        lambda_out = expand("results/er_{er}/lambda_out/lambda_out_{bin_id}.m8", er=error_rates, bin_id=bin_ids),
        iota = expand("results/er_{er}/iota/blastN/dummy.txt", er=error_rates)

#include: "rules/simulate.smk"
#include: "rules/valik.smk"
include: "rules/simulate2.smk"
include: "rules/lambda.smk"
include: "rules/iota.smk"